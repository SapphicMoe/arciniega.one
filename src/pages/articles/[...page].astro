---
import Articles from '@layouts/ArticleList.astro';

import type { PaginateFunction } from 'astro';

import { getCollection } from 'astro:content';
import { getPostData } from '@utils/index';

import Pagination from '@components/blog/Pagination.astro';

const { page } = Astro.props;

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const articleCollection = await getCollection('articles');

  const sortedArticles = articleCollection.sort(
    (a, b) => new Date(b.data.created).valueOf() - new Date(a.data.created).valueOf()
  );

  const articles = sortedArticles.map((article) => ({
    params: { slug: article.slug },
    props: {
      post: {
        ...article,
        data: {
          ...article.data,
          timeEstimate: getPostData(article).readingTime,
        },
      },
    },
  }));

  return paginate(
    articles.map((data) => data.props.post),
    { pageSize: 10 }
  );
}
---

<Articles
  type="articles"
  title="Articles"
  articles={page.data}
  description="A personal blog, comprising of whatever stuff I find interesting to post."
  total={page.total}
>
  <Pagination page={page} />
</Articles>
