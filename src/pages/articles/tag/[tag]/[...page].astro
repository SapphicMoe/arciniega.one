---
import Articles from '@layouts/ArticleList.astro';

import type { PaginateFunction } from 'astro';

import { getCollection } from 'astro:content';

import Pagination from '@components/blog/Pagination.astro';

const { tag } = Astro.params;
const { page } = Astro.props;

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const articles = await getCollection('articles');

  const tags = Array.from(new Set(articles.flatMap((article) => article.data.tag)));

  return tags.map((tag) => {
    return paginate(
      articles.filter((article) => tag && article.data.tag?.includes(tag)),
      {
        params: { tag },
        pageSize: 10,
      }
    );
  });
}
---

<Articles
  title={`Articles with the tag ${tag}`}
  articles={page.data}
  description={`Fetched ${page.data.length} article${page.data.length === 1 ? '' : 's'}${
    page.data.length >= 10 ? ` (${page.total} total)` : ''
  } with the queried tag on this page.`}
  total={page.total}
>
  <Pagination page={page} />
</Articles>
