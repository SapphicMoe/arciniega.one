---
export const prerender = true;

import Posts from '@layouts/Post.astro';
import Pagination from '@components/blog/Pagination.astro';
import getPostData from '@lib/PostData';

import type { PaginateFunction } from 'astro';
import { getCollection } from 'astro:content';

interface Props {
  created: string;
  description: string;
  tags?: string[];
  title: string;
}

const { page } = Astro.props;

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const postCollection = await getCollection('posts');
  const sortedPosts = postCollection.sort(
    (a, b) => new Date(b.data.created).valueOf() - new Date(a.data.created).valueOf()
  );

  const posts = sortedPosts.map((post) => ({
    params: { slug: post.slug },
    props: {
      post: {
        ...post,
        data: {
          ...post.data,
          timeEstimate: getPostData(post).readingTime,
        },
      },
    },
  }));

  return paginate(
    posts.map((data) => data.props.post),
    { pageSize: 10 }
  );
}
---

<Posts
  type="posts"
  title={`Blog Posts`}
  posts={page.data}
  description="A personal blog, comprising of whatever stuff I find interesting to post."
  total={page.total}
>
  <Pagination page={page} />
</Posts>
