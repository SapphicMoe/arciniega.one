---
import Layout from '@layouts/page.astro';

import Footer from '@components/footer.astro';
import Line from '@components/underline.astro';
import Link from '@components/link.astro';

import { format, parseISO } from 'date-fns';
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon';

interface PostProps {
  comments: boolean;
  created: string;
  description: string;
  image?: {
    alt?: string;
    url?: string;
  };
  tags?: Array<string>;
  title: string;
}

const { page } = Astro.props;

const fm = (d: Date) => format(d, 'MMM do, yyyy');
const createdAt = (post: PostProps) => post.created && fm(parseISO(post.created));

export async function getStaticPaths({ paginate }) {
  const postCollection = await getCollection('posts');
  const posts = postCollection.sort((a, b) => new Date(b.data.created).valueOf() - new Date(a.data.created).valueOf());

  return paginate(posts, { pageSize: 10 });
}
---

<Layout
  description="A personal blog, comprising of whatever stuff I find interesting to post."
  pageTitle="Posts"
  title="Posts | Chloe Arciniega"
>
  <main class="content flex flex-grow flex-col text-3xl">
    <Line>My blog</Line>

    <p class="description mt-5 italic">A personal blog, comprising of whatever stuff I find interesting to post.</p>

    <!-- prettier-ignore -->
    <Link class="subscribe md:mb-5 mb-10" title="Subscribe to RSS feed" href="/rss.xml">
        <Icon class="mb-2" size={20} name="mdi:rss" />
        Subscribe to RSS
    </Link>

    {
      page.data.map(({ data, slug }) => (
        <article>
          {data.title && (
            <span class="title text-4xl font-bold">
              <Link href={`posts/${slug}`} title={data.title}>
                {data.title}
              </Link>
            </span>
          )}

          {data.created && (
            <span class="date">
              <Icon class="mb-1" size={20} name="mdi:calendar" />
              {createdAt(data)}
            </span>
          )}

          {data.tags ? (
            <div class="tags flex gap-2">
              <span class="tags border-ctp-pink">
                <Icon class="mb-1" size={20} name="mdi:tag" />
                {data.tags && data.tags.join(', ')}
              </span>
            </div>
          ) : null}

          {data.description && <span class="description mt-10 italic">{data.description}</span>}
        </article>
      ))
    }

    {
      page.url.prev ? (
        <Link href={page.url.prev}>
          <Icon class="mb-1" size={20} name="mdi:arrow-left-thick" />
          Recent posts
        </Link>
      ) : (
        <div />
      )
    }

    {
      page.url.next ? (
        <Link href={page.url.next}>
          <Icon class="mb-1" size={20} name="mdi:arrow-right-thick" />
          Older Posts
        </Link>
      ) : (
        <div />
      )
    }

    <Footer />
  </main>

  <style>
    span.tags {
      @apply mb-2 mt-2 rounded-lg border-[1px] py-1 px-3;
    }
  </style>
</Layout>
