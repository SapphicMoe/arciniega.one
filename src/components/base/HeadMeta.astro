---
import { SEO } from 'astro-seo';
import { base } from '$config';

interface Props {
  description?: string;
  pageTitle: string;
  title: string;
  created?: string;
  ogImage?: {
    src?: string;
    alt?: string;
  };
}

const { description, pageTitle, ogImage, created, title } = Astro.props;

import { blog } from '$config';

const siteName = Astro.site?.hostname;
const isArticle = Astro.url.pathname.startsWith('/article/');

const IS_PRODUCTION = import.meta.env.NODE_ENV === 'production';

const image = (image?: string) =>
  IS_PRODUCTION ? new URL(image ?? base.favicon.fileName, Astro.site).href : image ?? base.favicon.fileName;

console.log(image(ogImage?.src));
---

<SEO
  {title}
  {description}
  charset={'UTF-8'}
  openGraph={{
    basic: {
      title: pageTitle,
      type: 'website',
      image: image(),
    },
    optional: {
      siteName: ogImage ? 'Sapphic Angels' : siteName,
      description,
    },
    article: {
      publishedTime: created,
    },
    image: {
      alt: isArticle ? ogImage?.alt : base.favicon.altText,
    },
  }}
  twitter={{
    card: isArticle ? 'summary_large_image' : 'summary',
    creator: 'solelychloe',
    description,

    image: image(ogImage?.src),
    imageAlt: isArticle ? ogImage?.alt : base.favicon?.altText,
  }}
  extend={{
    meta: [
      { name: 'darkreader-lock' },
      { name: 'viewport', content: 'width=device-width, initial-scale=1' },
      { name: 'generator', content: Astro.generator },
      { name: 'theme-color', content: base.themeColor },
    ],
    link: [{ rel: 'me', href: 'https://wetdry.world/@chloe' }],
  }}
/>

{blog.rss.enabled && <link rel="alternate" {...blog.rss.options} type="application/rss+xml" />}
