---
import type { MarkdownHeading } from 'astro';
import Heading from '@components/mdoc/Heading.astro';
import TableOfContentsHeading from '@components/mdoc/TableOfContentsHeading.astro';

interface Props {
  headings: MarkdownHeading[];
}

export interface HeadingTree extends MarkdownHeading {
  subheadings: HeadingTree[];
}

const { headings } = Astro.props;

const toc: HeadingTree[] = [];
const parentHeadings = new Map();
headings.forEach((h) => {
  const heading = { ...h, subheadings: [] };
  parentHeadings.set(heading.depth, heading);

  if (heading.depth === 2) {
    toc.push(heading);
  } else {
    parentHeadings.get(heading.depth - 1).subheadings.push(heading);
  }
});
---

<Heading level={2} id="table-of-contents">Table of Contents</Heading>
<ul>
  {toc.map(({ subheadings, slug, text }) => <TableOfContentsHeading {subheadings} {slug} {text} />)}
</ul>
