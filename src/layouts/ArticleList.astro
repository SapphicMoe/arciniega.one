---
import Layout from '@layouts/Page.astro';
import Separator from '@components/Separator.astro';

import { format, parseISO } from 'date-fns';
import { Icon } from 'astro-iconify';

import type { CollectionEntry } from 'astro:content';

const formatDate = (date: Date) => format(date, 'MMMM d, yyyy');

interface Props {
  title?: string;
  articles: CollectionEntry<'articles'>[];
  description: string;
  total?: number;
}

const { articles, description, title } = Astro.props;
---

<Layout description={description} pageTitle="Articles" title="Articles | Chloe Arciniega">
  <span class="flex flex-col gap-1 pb-3 text-center">
    <span class="title">{title}</span>
    <span class="pt-1 italic">{description}</span>

    <section class="rss pt-3">
      <Icon size={25} name="mdi:rss" />
      <a class="subscribe pt-1" title="Subscribe to my RSS feed" href="/rss.xml">Subscribe to RSS</a>
    </section>
  </span>

  <hr class="text-ctp-mauve dark:text-ctp-pink" />

  {
    articles
      .sort((a, b) => new Date(b.data.created).valueOf() - new Date(a.data.created).valueOf())
      .map(({ data, slug }) => {
        return (
          <span class="flex flex-col pb-5 pt-2">
            <article class="flex flex-col gap-2 md:gap-1">
              <span class="text-3xl">
                <a transition:name={`title-${slug}`} class="font-semibold" href={`/article/${slug}`} title={data.title}>
                  {data.title}
                </a>
              </span>

              <span class="flex flex-wrap gap-1.5">
                <span transition:name={`date-${slug}`} class="text-ctp-subtext0">
                  {formatDate(parseISO(data.created))}
                </span>

                <Separator transitionName={`sep-1-${slug}`} />

                {data.tag && (
                  <a
                    transition:name={`tag-${slug}`}
                    class="font-normal"
                    href={`/articles/tag/${data.tag}`}
                    title={`Article tagged with ${data.tag}`}
                  >
                    {data.tag}
                  </a>
                )}

                {data.timeEstimate && (
                  <>
                    <Separator transitionName={`sep-2-${slug}`} />
                    <span transition:name={`time-${slug}`} class="text-ctp-subtext0">
                      {data.timeEstimate}
                    </span>
                  </>
                )}
              </span>

              {data.description && (
                <span transition:name={`description-${slug}`} class="description pt-2 italic">
                  {data.description}
                </span>
              )}
            </article>
          </span>
        );
      })
  }

  <slot />
</Layout>
