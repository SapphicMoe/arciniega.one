---
export const prerender = true;

import Layout from '@layouts/Page.astro';

import Footer from '@components/base/Footer.astro';
import Line from '@components/base/Underline.astro';
import Link from '@components/base/Link.astro';
import Separator from '@components/base/Separator.astro';

import { format, parseISO } from 'date-fns';
import { Icon } from 'astro-iconify';

import type { CollectionEntry } from 'astro:content';

export interface Props {
  type: 'articles' | 'tags';
  title?: string;
  articles: CollectionEntry<'articles'>[];
  description: string;
  total?: number;
}

const formatDate = (date: Date) => format(date, 'MMM d, yyyy');

const { type, articles, title, description } = Astro.props;
---

<Layout description={description} pageTitle="Articles" title="Articles | Chloe Arciniega">
  <main class="content flex flex-col">
    <Line>Articles</Line>

    <span class="header pb-1">
      <span class="flex flex-col gap-3">
        {
          // prettier-ignore
          type === 'articles' ? (
            <>
              <span class="font-semibold italic">{description}</span>
              {`Currently serving ${articles.length} article${articles.length == 1 ? '' : 's'}${articles.length == 10 ? ` (${Astro.props.total} total)` : ''} on this page.`}
            </>
          ) : (
            <>
              <span class="title text-4xl font-bold">{title}</span>
              {`Fetched ${articles.length} article${articles.length === 1 ? '' : 's'}${articles.length == 10 ? ` (${Astro.props.total} total)` : ''} with the queried tag on this page.`}
            </>
          )
        }
      </span>
    </span>

    <section class="rss pb-3">
      <Icon class="text-ctp-mauve dark:text-ctp-pink" size={25} name="mdi:rss" />
      <Link class="subscribe pb-5 pt-1" title="Subscribe to my RSS feed" href="/rss.xml">Subscribe to RSS</Link>
    </section>

    <hr class="pb-2 text-ctp-mauve dark:text-ctp-pink" />

    {
      articles
        .sort((a, b) => new Date(b.data.created).valueOf() - new Date(a.data.created).valueOf())
        .map(({ data, slug }) => (
          <span class="rounded-1xl flex flex-col pb-2 pt-1">
            <article class="flex flex-col gap-1 border-[2px] border-ctp-mauve p-5 dark:border-ctp-pink">
              <span class="text-3xl">
                <Link class="font-semibold" href={`/article/${slug}`} title={data.title}>
                  {data.title}
                </Link>
              </span>

              <span class="flex gap-1">
                <span class="text-ctp-subtext1">{formatDate(parseISO(data.created))}</span>

                <Separator />

                {data.tag && (
                  <Link
                    class="font-normal"
                    href={`/articles/tag/${data.tag}`}
                    title={`Article tagged with ${data.tag}`}
                  >
                    {data.tag}
                  </Link>
                )}

                {data.timeEstimate && (
                  <>
                    <Separator /> <span class="text-ctp-subtext1">{data.timeEstimate}</span>
                  </>
                )}
              </span>

              {data.description && <span class="description italic">{data.description}</span>}
            </article>
          </span>
        ))
    }

    <slot />

    <Footer />
  </main>
</Layout>
